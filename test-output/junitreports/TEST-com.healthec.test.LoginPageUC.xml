<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="10" hostname="DT-AKASHM" name="com.healthec.test.LoginPageUC" tests="11" failures="0" timestamp="04 Jun 2018 10:35:54 GMT" time="5.820" errors="1">
  <testcase name="Loginpage_TC_011" time="5.820" classname="com.healthec.test.LoginPageUC">
    <error type="org.openqa.selenium.WebDriverException" message="unknown error: keys should be a string
  (Session info: chrome=67.0.3396.68)
  (Driver info: chromedriver=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &#039;3.11.0&#039;, revision: &#039;e59cfb3&#039;, time: &#039;2018-03-11T20:26:55.152Z&#039;
System info: host: &#039;DT-AKASHM&#039;, ip: &#039;192.168.15.118&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_151&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.healthec.providereconne..., appPackage: com.healthec.providereconne..., databaseEnabled: false, desired: {appActivity: com.healthec.providereconne..., appPackage: com.healthec.providereconne..., deviceName: Real Device, nativeWebScreenshot: true, platformName: Android, platformVersion: 6.0.1, skipUnlock: true}, deviceManufacturer: samsung, deviceModel: SM-J700F, deviceName: 3300434c3110b265, deviceScreenSize: 720x1280, deviceUDID: 3300434c3110b265, javascriptEnabled: true, locationContextEnabled: false, nativeWebScreenshot: true, networkConnectionEnabled: true, platform: LINUX, platformName: LINUX, platformVersion: 6.0.1, skipUnlock: true, takesScreenshot: true, warnings: {}, webStorageEnabled: false}
Session ID: 7425cf61-7fe1-49f5-acb0-d19b40a27d8b">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: keys should be a string
  (Session info: chrome=67.0.3396.68)
  (Driver info: chromedriver=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7),platform=Windows NT 10.0.14393 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z'
System info: host: 'DT-AKASHM', ip: '192.168.15.118', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.healthec.providereconne..., appPackage: com.healthec.providereconne..., databaseEnabled: false, desired: {appActivity: com.healthec.providereconne..., appPackage: com.healthec.providereconne..., deviceName: Real Device, nativeWebScreenshot: true, platformName: Android, platformVersion: 6.0.1, skipUnlock: true}, deviceManufacturer: samsung, deviceModel: SM-J700F, deviceName: 3300434c3110b265, deviceScreenSize: 720x1280, deviceUDID: 3300434c3110b265, javascriptEnabled: true, locationContextEnabled: false, nativeWebScreenshot: true, networkConnectionEnabled: true, platform: LINUX, platformName: LINUX, platformVersion: 6.0.1, skipUnlock: true, takesScreenshot: true, warnings: {}, webStorageEnabled: false}
Session ID: 7425cf61-7fe1-49f5-acb0-d19b40a27d8b
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:89)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279)
	at io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45)
	at io.appium.java_client.MobileElement.execute(MobileElement.java:1)
	at io.appium.java_client.android.AndroidElement.execute(AndroidElement.java:1)
	at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at io.appium.java_client.pagefactory.ElementInterceptor.getObject(ElementInterceptor.java:40)
	at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:62)
	at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.sendKeys(<generated>)
	at com.healthec.test.LoginPageUC.Loginpage_TC_011(LoginPageUC.java:258)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)
	at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)
]]>
    </error>
  </testcase> <!-- Loginpage_TC_011 -->
  <testcase name="Loginpage_TC_007" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_007 -->
  <testcase name="Loginpage_TC_009" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_009 -->
  <testcase name="Loginpage_TC_006" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_006 -->
  <testcase name="loginpage_TC_010" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- loginpage_TC_010 -->
  <testcase name="Loginpage_TC_003" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_003 -->
  <testcase name="Loginpage_TC_008" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_008 -->
  <testcase name="Loginpage_TC_005" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_005 -->
  <testcase name="Loginpage_TC_002" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_002 -->
  <testcase name="Loginpage_TC_004" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_004 -->
  <testcase name="Loginpage_TC_001" classname="com.healthec.test.LoginPageUC">
    <skipped/>
  </testcase> <!-- Loginpage_TC_001 -->
</testsuite> <!-- com.healthec.test.LoginPageUC -->
